; findmin.L1
; Find the minimum number from the 6 registers passed in as the argument 

(:main
  (:main
    0 0
    (rdi <- 10)
    (rsi <- 9)
    (rdx <- 9)
    (rcx <- 2)
    (r8 <- 1)
    (r9 <- 5)
    ((mem rsp -8) <- :find_min_ret)
    (call :find_min 6)
    :find_min_ret
    (rdi <- rax)
    ((mem rsp -8) <- :encode_ret)
    (call :encode 1)
    :encode_ret
    (rdi <- rax)
    (call print 1)
    (return))
  (:encode
    1 0
    (rdi *= 2)
    (rdi += 1)
    (rax <- rdi)
    (return))
  (:decode
    1 0
    (rdi -= 1)
    (rdi >>= 1)
    (rax <- rdi)
    (return))
  (:find_min
    6 0
    (rax <- rdi)
    (cjump rsi < rax :replace_1 :next_reg_1)
    :replace_1
    (rax <- rsi)
    :next_reg_1
    (cjump rdx < rax :replace_2 :next_reg_2)
    :replace_2
    (rax <- rdx)
    :next_reg_2
    (cjump rcx < rax :replace_3 :next_reg_3)
    :replace_3
    (rax <- rcx)
    :next_reg_3
    (cjump r8 < rax :replace_4 :next_reg_4)
    :replace_4
    (rax <- r8)
    :next_reg_4
    (cjump r9 < rax :replace_5 :return)
    :replace_5
    (rax <- r9)
    :return
    (return))
)
