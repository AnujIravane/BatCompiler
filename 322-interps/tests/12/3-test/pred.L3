((let ([a (new-array 3 2)])
  (let ([c (make-closure :f a)])
    (let ([n 4])
      (let ([is-num (number? n)])
        (let ([x1 (print is-num)])
          (let ([is-a (a? a)])
            (let ([x2 (print is-a)])
              (let ([is-a (a? c)])
                (let ([x3 (print is-a)])
                  (let ([is-a (a? :f)])
                    (print is-a)))))))))))
  (:f ()
    (print 1)))