(:main
  (:main
    0 1
    (rdi <- 11)
    (rsi <- 7)
    (call allocate 2)
    ((mem rax 8) <- 3)
    ((mem rax 16) <- 5)
    ((mem rax 24) <- 7)
    ((mem rax 32) <- 9)
    ((mem rax 40) <- 11)
    ((mem rsp -8) <- :reverse_ret)
    (rdi <- rax)
    (call :reverse 1)
    :reverse_ret
    (rdi <- rax) 
    (call print 1)
    (return))
  (:swap_pair
    2 0
    (x <- (mem rdi 0))
    (y <- (mem rsi 0))
    ((mem rdi 0) <- y)
    ((mem rsi 0) <- x)
    (return)) 
  (:reverse
    1 3
    (x <- rdi)
    (x += 8)
    (y <- (mem rdi 0))
    (y <<= 3)
    (y += rdi)
    ((mem rsp 16) <- rdi) ; for return later
    :for_start
    (cjump x <= y :for_body :for_end)
    :for_body
    ((mem rsp -8) <- :swap_ret)
    (rdi <- x)
    (rsi <- y)
    ((mem rsp 0) <- x)
    ((mem rsp 8) <- y)
    (call :swap_pair 2) 
    :swap_ret
    (x <- (mem rsp 0))
    (y <- (mem rsp 8))
    (x += 8)
    (y -= 8)
    (goto :for_start)
    :for_end
    (rax <- (mem rsp 16))
    (return))
)


