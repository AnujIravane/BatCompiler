(:main (:main
	0 0
	(rdi <- 10)
	((mem rsp -8) <- :fib_ret)
	(call :fib 1)
	:fib_ret
	(rdi <- rax)
	((mem rsp -8) <- :encode_ret)
	(call :encode 1)
	:encode_ret
	(rdi <- rax)
	(call print 1)
	(return))
       (:encode
	1 0
	(rdi *= 2)
	(rdi += 1)
	(rax <- rdi)
	(return))
       (:decode
	1 0
	(rdi -= 1)
	(rdi >>= 1)
	(rax <- rdi)
	(return))
       (:fib
	1 0
	(cjump rdi < 1 :return_fib :tail)
	:return_fib
	(rax <- 1)
	(return)
	:tail
	(rsi <- rdi)
	(rdi <- 0)
	(rdx <- 1)
	(rcx <- 0)
	((mem rsp -8) <- :tail_ret)
	(call :fib_tail 4)
	:tail_ret
	(return))
       (:fib_tail
	4 0
	(cjump rdi = rsi :stop :tail_recurse)
	:stop
	(rax <- rdx)
	(return)
	:tail_recurse
	(rdi += 1)
	(tmp <- rdx)
	(rdx += rcx)
	(rcx <- tmp)
	(tail-call :fib_tail 4)))
