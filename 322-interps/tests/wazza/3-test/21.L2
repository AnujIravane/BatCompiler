(:main
  (:main
    0 0
    (rdi <- 5)
    (rsi <- 3)
    (call allocate 2)
    ((mem rax 16) <- 5)
    (rdi <- 5)
    (rsi <- rax)
    (call allocate 2)
    (mat1 <- rax)
    (rdi <- 5)
    (rsi <- 7)
    (call allocate 2)
    ((mem rax 16) <- 9)
    (rdi <- mat1)
    ((mem rdi 16) <- rax)
    (call print 1)
    (rdi <- 5)
    (rsi <- 7)
    (call allocate 2)
    ((mem rax 16) <- 9)
    (rdi <- 5)
    (rsi <- rax)
    (call allocate 2)
    (mat2 <- rax)
    (rdi <- 5)
    (rsi <- 7)
    (call allocate 2)
    ((mem rax 16) <- 9)
    (rdi <- mat2)
    ((mem rdi 16) <- rax)
    (call print 1)
    ((mem rsp -8) <- :add_matrix_ret)
    (rdi <- mat1)
    (rsi <- mat2)
    (call :add_matrix 2)
    :add_matrix_ret
    (rdi <- rax)
    (call print 1)
    (return))
  (:add_matrix
    2 0
    (ab <- (mem rdi 8))
    (cd <- (mem rdi 16))
    (ef <- (mem rsi 8))
    (gh <- (mem rsi 16))
    (rax <- rdi)
    (a <- (mem ab 8))
    (e <- (mem ef 8))
    (a -= 1)
    (a >>= 1)
    (e -= 1)
    (e >>= 1)
    (a += e)
    (a *= 2)
    (a += 1)
    ((mem ab 8) <- a)
    (c <- (mem cd 8))
    (g <- (mem gh 8))
    (c -= 1)
    (c >>= 1)
    (g -= 1)
    (g >>= 1)
    (c += g)
    (c *= 2)
    (c += 1)
    ((mem cd 8) <- c)
    (b <- (mem ab 16))
    (f <- (mem ef 16))
    (b -= 1)
    (b >>= 1)
    (f -= 1)
    (f >>= 1)
    (b += f)
    (b *= 2)
    (b += 1)
    ((mem ab 16) <- b)
    (d <- (mem cd 16))
    (h <- (mem gh 16))
    (d -= 1)
    (d >>= 1)
    (h -= 1)
    (h >>= 1)
    (d += h)
    (d *= 2)
    (d += 1)
    ((mem cd 16) <- d)
    (return))
)
