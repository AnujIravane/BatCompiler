((:main)
 (:main ()
    (let ([arr (new-array 10 1)])
    (let ([g (aset arr 0 2)])
    (let ([g (aset arr 1 1)])
    (let ([g (aset arr 2 5)])
    (let ([g (aset arr 3 3)])
    (let ([g (aset arr 4 4)])
    (let ([g (aset arr 5 9)])
    (let ([g (aset arr 6 7)])
    (let ([g (aset arr 7 6)])
    (let ([g (aset arr 8 10)])
    (let ([g (aset arr 9 8)])
    (let ([g (print arr)])
    (let ([sorted (:bubble_sort_top arr)])
    (print sorted)))))))))))))))
 (:bubble_sort_top (arr)
    (let ([flag 1])
    (let ([n (alen arr)])
    (let ([lim (- n 1)])
    (let ([fret (:bubble_sort_helper arr 0 lim 0)])
    (let ([fc (= flag fret)])
    (if fc
        (:bubble_sort_top arr)
        arr)))))))
 (:bubble_sort_helper (arr i lim f)
    (let ([cur (aref arr i)])
    (let ([ni (+ i 1)])
    (let ([term (= i lim)])
    (if term
        f
        (let ([next (aref arr ni)])
        (let ([swap_pred (< next cur)])
        (if swap_pred
            (let ([nf (:swap arr i ni)])
            (:bubble_sort_helper arr ni lim nf))
            (:bubble_sort_helper arr ni lim f)))))))))
 (:swap (arr i j)
    (let ([ai (aref arr i)])
    (let ([aj (aref arr j)])
    (let ([s1 (aset arr i aj)])
    (let ([s2 (aset arr j ai)])
    1))))))
    
