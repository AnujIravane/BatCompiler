((:main)
  (:main ()
    (let ([arr (new-array 4 3 )])
      (let ([zero (aset arr 0 6)])
        (let ([zero (aset arr 1 -1)])
          (let ([zero (aset arr 2 5)])
            (let ([zero (aset arr 3 6)])
              (let ([res (:find_min_array arr 0 100)])
                (print res))))))))
  (:find_min_array (arr index min)
    (let ([len (alen arr)])
      (let ([lenminusone (- len 1)])
        (let ([indexgtlen (< lenminusone index)])
            (if indexgtlen
            min
              (let ([arrmem (aref arr index)])
                (let ([indexplusone (+ index 1)])
                  (let ([newmin (< arrmem min)])
 		    (if newmin
                      (:find_min_array arr indexplusone arrmem)
                      (:find_min_array arr indexplusone min))))))))))) 
