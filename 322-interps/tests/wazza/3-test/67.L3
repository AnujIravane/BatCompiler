((:main)
 (:main ()
    (let ([arr1 (new-array 6 1)])
    (let ([arr2 (new-array 2 2)])
    (let ([as1 (aset arr1 0 arr2)])
    (let ([as2 (aset arr1 1 arr2)])
    (let ([as3 (aset arr1 2 arr2)])
    (let ([as4 (aset arr1 3 arr2)])
    (let ([as5 (aset arr1 4 arr2)])
    (let ([as6 (aset arr1 5 arr2)])
    (let ([p1 (print arr1)])
    (let ([as7 (aset arr2 0 50)])
    (let ([p2 (print arr1)])
    (let ([res (:first_copy arr1)])
    (let ([p3 (print res)])
    (let ([arr3 (aref arr1 0)])
    (let ([as8 (aset arr3 1 100)])
    (print arr1)))))))))))))))))
 (:first_copy (arr)
    (let ([arr2 (aref arr 0)])
    (let ([narr2 (alen arr2)])
    (let ([arr3 (:copy arr2 narr2)])
    (let ([as (aset arr 0 arr3)])
    arr)))))
 (:copy (arr n)
    (let ([a 0])
    (let ([arr2 (new-array n a)])
    (let ([res (:final_copy arr2 arr n)])
    arr2))))
 (:final_copy (arr1 arr2 n)
    (let ([term (<= n 0)])
    (if term
        term
        (let ([nn (- n 2)])
        (let ([arr3 (aref arr2 nn)])
        (let ([as1 (aset arr1 nn arr3)])
        (:final_copy arr1 arr2 nn))))))))
